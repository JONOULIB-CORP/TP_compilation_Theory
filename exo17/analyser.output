Grammar

    0 $accept: S $end

    1 S: L

    2 L: L STMT
    3  | STMT

    4 STMT: VAR '=' E ';'
    5     | PRINT VAR ';'

    6 E: E '+' T
    7  | T

    8 T: T '*' F
    9  | F

   10 F: INT
   11  | VAR


Terminals, with rules where they appear

    $end (0) 0
    '*' (42) 8
    '+' (43) 6
    ';' (59) 4 5
    '=' (61) 4
    error (256)
    INT <intval> (258) 10
    VAR <var> (259) 4 5 11
    PRINT (260) 5


Nonterminals, with rules where they appear

    $accept (10)
        on left: 0
    S (11)
        on left: 1
        on right: 0
    L (12)
        on left: 2 3
        on right: 1 2
    STMT (13)
        on left: 4 5
        on right: 2 3
    E <intval> (14)
        on left: 6 7
        on right: 4 6
    T <intval> (15)
        on left: 8 9
        on right: 6 7 8
    F <intval> (16)
        on left: 10 11
        on right: 8 9


State 0

    0 $accept: . S $end

    VAR    shift, and go to state 1
    PRINT  shift, and go to state 2

    S     go to state 3
    L     go to state 4
    STMT  go to state 5


State 1

    4 STMT: VAR . '=' E ';'

    '='  shift, and go to state 6


State 2

    5 STMT: PRINT . VAR ';'

    VAR  shift, and go to state 7


State 3

    0 $accept: S . $end

    $end  shift, and go to state 8


State 4

    1 S: L .
    2 L: L . STMT

    VAR    shift, and go to state 1
    PRINT  shift, and go to state 2

    $default  reduce using rule 1 (S)

    STMT  go to state 9


State 5

    3 L: STMT .

    $default  reduce using rule 3 (L)


State 6

    4 STMT: VAR '=' . E ';'

    INT  shift, and go to state 10
    VAR  shift, and go to state 11

    E  go to state 12
    T  go to state 13
    F  go to state 14


State 7

    5 STMT: PRINT VAR . ';'

    ';'  shift, and go to state 15


State 8

    0 $accept: S $end .

    $default  accept


State 9

    2 L: L STMT .

    $default  reduce using rule 2 (L)


State 10

   10 F: INT .

    $default  reduce using rule 10 (F)


State 11

   11 F: VAR .

    $default  reduce using rule 11 (F)


State 12

    4 STMT: VAR '=' E . ';'
    6 E: E . '+' T

    ';'  shift, and go to state 16
    '+'  shift, and go to state 17


State 13

    7 E: T .
    8 T: T . '*' F

    '*'  shift, and go to state 18

    $default  reduce using rule 7 (E)


State 14

    9 T: F .

    $default  reduce using rule 9 (T)


State 15

    5 STMT: PRINT VAR ';' .

    $default  reduce using rule 5 (STMT)


State 16

    4 STMT: VAR '=' E ';' .

    $default  reduce using rule 4 (STMT)


State 17

    6 E: E '+' . T

    INT  shift, and go to state 10
    VAR  shift, and go to state 11

    T  go to state 19
    F  go to state 14


State 18

    8 T: T '*' . F

    INT  shift, and go to state 10
    VAR  shift, and go to state 11

    F  go to state 20


State 19

    6 E: E '+' T .
    8 T: T . '*' F

    '*'  shift, and go to state 18

    $default  reduce using rule 6 (E)


State 20

    8 T: T '*' F .

    $default  reduce using rule 8 (T)
